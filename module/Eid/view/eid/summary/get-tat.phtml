<?php

use Zend\Debug\Debug;

// Debug::dump($result);die;
?>
<script type="text/javascript">
    /**
     * Highcharts Linear-Gauge series plugin
     */
    (function(H) {
        H.seriesType('lineargauge', 'column', null, {
            setVisible: function() {
                H.seriesTypes.column.prototype.setVisible.apply(this, arguments);
                if (this.markLine) {
                    this.markLine[this.visible ? 'show' : 'hide']();
                }
            },
            drawPoints: function() {
                // Draw the Column like always
                H.seriesTypes.column.prototype.drawPoints.apply(this, arguments);

                // Add a Marker
                var series = this,
                    chart = this.chart,
                    inverted = chart.inverted,
                    xAxis = this.xAxis,
                    yAxis = this.yAxis,
                    point = this.points[0], // we know there is only 1 point
                    markLine = this.markLine,
                    ani = markLine ? 'animate' : 'attr';

                // Hide column
                point.graphic.hide();

                if (!markLine) {
                    var path = inverted ? ['M', 0, 0, 'L', -5, -5, 'L', 5, -5, 'L', 0, 0, 'L', 0, 0 + xAxis.len] : ['M', 0, 0, 'L', -5, -5, 'L', -5, 5, 'L', 0, 0, 'L', xAxis.len, 0];
                    markLine = this.markLine = chart.renderer.path(path)
                        .attr({
                            fill: series.color,
                            stroke: series.color,
                            'stroke-width': 1
                        }).add();
                }
                markLine[ani]({
                    translateX: inverted ? xAxis.left + yAxis.translate(point.y) : xAxis.left,
                    translateY: inverted ? xAxis.top : yAxis.top + yAxis.len - yAxis.translate(point.y)
                });
            }
        });
    }(Highcharts));

    Highcharts.chart('nationalTAT', {
            chart: {
                type: 'lineargauge',
                inverted: true,
                height: 100
            },
            exporting: { enabled: false },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            xAxis: {
                lineColor: '#C0C0C0',
                labels: {
                    enabled: false
                },
                tickLength: 0
            },
            yAxis: {
                min: 0,
                tickLength: 5,
                tickWidth: 1,
                tickColor: '#C0C0C0',
                gridLineColor: '#C0C0C0',
                gridLineWidth: 1,
                minorTickInterval: 5,
                minorTickWidth: 1,
                minorTickLength: 5,
                minorGridLineWidth: 0,

                title: null,
                labels: {
                    format: '{value} days'
                },
                plotBands: [{
                    from: 0,
                    to: <?php echo !empty($result['sec1'])?$result['sec1']:0;?>,
                    color: 'rgba(255,0,0,0.5)'
                }, {
                    from: <?php echo !empty($result['sec1'])?$result['sec1']:0;?>,
                    to: <?php echo !empty($result['sec1']+$result['sec2'])?$result['sec1']+$result['sec2']:0;?>,
                    color: 'rgba(255,255,0,0.5)'
                }, {
                    from: <?php echo !empty($result['sec1']+$result['sec2'])?$result['sec1']+$result['sec2']:0;?>,
                    to: <?php echo !empty($result['sec1']+$result['sec2']+$result['sec3'])?$result['sec1']+$result['sec2']+$result['sec3']:0;?>,
                    color: 'rgba(0,255,0,0.5)'
                }, {
                    from: <?php echo !empty($result['sec1']+$result['sec2']+$result['sec3'])?$result['sec1']+$result['sec2']+$result['sec3']:0;?>,
                    to: <?php $final = !empty($result['sec1']+$result['sec2']+$result['sec3'])?$result['sec1']+$result['sec2']+$result['sec3']:0; echo $final;?>,
                    // color: 'rgba(0,0,0,0.5)'
                }]
            },
            legend: {
                enabled: false
            },

            series: [
                {
                    name:'Collection to Dispatch (C-D)',
                    data: [<?php echo ceil(($result['total']));?>],
                    color: 'black',
                    dataLabels: {
                        enabled: true,
                        align: 'center',
                        format: '{point.y} days',
                        y: 10
                    }
                },
                /* {
                    name:'Collection Receipt (C-R)',
                    data: [<?php echo $result['sec1'];?>],
                    color: '#F64747',
                    dataLabels: {
                        enabled: true,
                        align: 'center',
                        format: '{point.y}',
                        y: 10
                    }
                },
                {
                    name:'Processing Dispatch (P-D)',
                    data: [<?php echo $result['sec2'];?>],
                    color: '#F9BF3B',
                    dataLabels: {
                        enabled: true,
                        align: 'center',
                        format: '{point.y}',
                        y: 10
                    }
                },
                {
                    name:'Receipt to Processing (R-P)',
                    data: [<?php echo $result['sec3'];?>],
                    color: '#26C281',
                    dataLabels: {
                        enabled: true,
                        align: 'center',
                        format: '{point.y}',
                        y: 10
                    }
                } */
            ]

        });
</script>